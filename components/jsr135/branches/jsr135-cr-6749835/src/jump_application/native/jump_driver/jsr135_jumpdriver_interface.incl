/*
 * Copyright  1990-2006 Sun Microsystems, Inc. All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version
 * 2 only, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License version 2 for more details (a copy is
 * included at /legal/license.txt).
 *
 * You should have received a copy of the GNU General Public License
 * version 2 along with this work; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
 * Clara, CA 95054 or visit www.sun.com if you need additional
 * information or have any questions.
 */

#define IFACE_STATUS_OK     0
#define IFACE_STATUS_FAIL   1

#define STRING_LEN(str_)    (str_ == NULL ? 0 : strlen(str_))

#define MAX_SHMEM_NAME_LEN 20

typedef int typeInt;
typedef unsigned char typeByte;
typedef short typeShort;
typedef long long typeLong;

START_INTERFACE()

// jsr135_open_tunnel()
START(int, jsr135_open_tunnel, (int isolateId))
DECL_STATUS()
DECL_ARG(int, isolateId)
ARG(Int, isolateId)
INVOKE(status, jsr135_open_tunnel, (isolateId))
END_STATUS()

// jsr135_close_tunnel()
START(int, jsr135_close_tunnel, (int isolateId))
DECL_STATUS()
DECL_ARG(int, isolateId)
ARG(Int, isolateId)
INVOKE(status, jsr135_close_tunnel, (isolateId))
END_STATUS()

// jsr135_get_pcmctl()
START(int, jsr135_get_pcmctl, (int *channels, int *bits, int *rate))
DECL_STATUS()
DECL_ARG(int, channels)
DECL_ARG(int, bits)
DECL_ARG(int, rate)
INVOKE(status, jsr135_get_pcmctl, (&channels, &bits, &rate))
OUT_ARG(Int, channels)
OUT_ARG(Int, bits)
OUT_ARG(Int, rate)
END_STATUS()

// jsr135_mixer_start()
START(int, jsr135_mixer_start, (int isolateId))
DECL_STATUS()
DECL_ARG(int, isolateId)
ARG(Int, isolateId)
INVOKE(status, jsr135_mixer_start, (isolateId))
END_STATUS()

// jsr135_mixer_stop()
START(int, jsr135_mixer_stop, (int isolateId))
DECL_STATUS()
DECL_ARG(int, isolateId)
ARG(Int, isolateId)
INVOKE(status, jsr135_mixer_stop, (isolateId))
END_STATUS()
END_INTERFACE()
