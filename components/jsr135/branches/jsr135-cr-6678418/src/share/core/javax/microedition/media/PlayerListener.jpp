/*
 * 
 * Copyright  1990-2007 Sun Microsystems, Inc. All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version
 * 2 only, as published by the Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License version 2 for more details (a copy is
 * included at /legal/license.txt).
 * 
 * You should have received a copy of the GNU General Public License
 * version 2 along with this work; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 * 
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
 * Clara, CA 95054 or visit www.sun.com if you need additional
 * information or have any questions.
 */

package javax.microedition.media;

/* JAVADOC ELIDED */
public interface PlayerListener {

/* JAVADOC ELIDED */
    String STARTED = "started";

/* JAVADOC ELIDED */
    String STOPPED = "stopped";

    // #ifndef ABB [
/* JAVADOC ELIDED */
    String STOPPED_AT_TIME = "stoppedAtTime";
    // #endif ]

/* JAVADOC ELIDED */
    String END_OF_MEDIA = "endOfMedia";

/* JAVADOC ELIDED */
    String DURATION_UPDATED = "durationUpdated";

/* JAVADOC ELIDED */
    String DEVICE_UNAVAILABLE = "deviceUnavailable";

/* JAVADOC ELIDED */
    String DEVICE_AVAILABLE = "deviceAvailable";

/* JAVADOC ELIDED */
    String VOLUME_CHANGED = "volumeChanged";

    // #ifndef ABB [
/* JAVADOC ELIDED */
    String SIZE_CHANGED = "sizeChanged";
    // #endif ]

    
/* JAVADOC ELIDED */
    String ERROR = "error";

/* JAVADOC ELIDED */
    String CLOSED = "closed";

    // #ifndef ABB [
/* JAVADOC ELIDED */
    String RECORD_STARTED = "recordStarted";

/* JAVADOC ELIDED */
    String RECORD_STOPPED = "recordStopped";

/* JAVADOC ELIDED */
    String RECORD_ERROR = "recordError";

/* JAVADOC ELIDED */
    String BUFFERING_STARTED = "bufferingStarted";

/* JAVADOC ELIDED */
    String BUFFERING_STOPPED = "bufferingStopped";
    // #endif ]

    /**
     * This method is called to deliver an event to a registered
     * listener when a <code>Player</code> event is observed.
     *
     * @param player The player which generated the event.
     * @param event The event generated as defined by the enumerated types.
     * @param eventData The associated event data.
     */
    void playerUpdate(Player player, String event, Object eventData);
}


